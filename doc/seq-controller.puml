@startuml

' https://www.uml-diagrams.org/sequence-diagrams.html

collections "Airplanes \n<thread>" as airplanes
participant "Airport" as airport
collections "Runway \n <concurrent resource>" as runways
participant "Report" as output_report

== Taking off ==


airplanes -> airport : permission_to_take_off()
airport -> runways : check_any_available()
runways --> airport : runaway status
alt runway is free
    airport --> airplanes : take_off_authorized()
else no runway available
    airport --> airplanes : take_off_denied()
else airport timeout
    airplanes -> airport : permission_to_take_off()
end


== Landing ==


airplanes -> airport : permission_to_land()
airport -> runways : check_any_available()
runways --> airport : runaway status
alt runway is free
    airport --> airplanes : land_authorized()
else no runway available
    airport --> airplanes : land_denied()
else airport timeout
    airplanes -> airport : permission_to_land()
end


== Show report ==

loop thread is alive
    airport -> airport : get_landing_queue()
    airport ->> output_report : show_landing_queue()
    airport -> airport : get_taking_off_queue()
    airport ->> output_report : show_taking_off_queue()
    note over output_report
        queue position, thread ID, airplane status
    end note
end




@enduml